
 1. Linear Search :-

#include <iostream>
using namespace std;
   
int main(){
    int input[100], count, i, num;
       
    cout << "Enter Number of Elements in Array\n";
    cin >> count;
     
    cout << "Enter " << count << " numbers \n";
      
    // Read array elements
    for(i = 0; i < count; i++){
        cin >> input[i];
    }
      
    cout << "Enter a number to serach in Array\n";
    cin >> num;
      
    // search num in inputArray from index 0 to elementCount-1 
    for(i = 0; i < count; i++){
        if(input[i] == num){
            cout << "Element found at index " << i;
            break;
        }
    }
      
    if(i == count){
        cout  << "Element Not Present in Input Array\n";
    }
 
    return 0;
}

                      Output

Enter Number of Elements in Array 6 
Enter 6 numbers
8 4 7 1 3 9 
Enter a number to serach in Array 3
Element found at index 4 
Enter Number of Elements in Array 6 
Enter 6 numbers 
8 4 7 1 3 9
Enter a number to serach in Array 2
Element Not Present in Input Array




 2. Binary Search :-

int arr[], int l, int r, int x)
{
    if (r >= l) {
        int mid = l + (r - l) / 2;
        if (arr[mid] == x)
            return mid;
        if (arr[mid] > x)
            return binarySearch(arr, l, mid - 1, x);
        return binarySearch(arr, mid + 1, r, x);
    }
    return -1;
}



 3. Insert Element in an array :-

#include <stdio.h> 
int main() 
{ 
int n, pos, arr[100], i, num;
 printf(" Enter the size of an array (Max 100) \n"); 
scanf( " %d ", &n); 
printf( " Enter the element of an array \n"); 
//Input value of an array for(i = 0; 
i < n; 
i++) 
{ 
scanf(" %d ", &arr[i]); 
} 
//Position to insert a new element printf(" Enter the position \n"); 
scanf(" %d ", &pos); 
// Number to be inserted in an array printf(" Enter number to be inserted \n"); 
scanf(" %d ", &num); 
for( i = n; 
i >= pos; 
i--) { arr[i] = arr[i-1]; 
} arr[pos-1] = num;
 //Increment the size of an array n++; 
printf(" Array after inserting new element \n"); 
//Array after inserting new element for( i = 0; 
i < n; 
i++) 
{ 
printf(" %d ", arr[i]); 
} 
return 0; 
}




 4. Delete element from an array :- 
  
#include <iostream> using namespace std;
 int main() 
{ 
int a[100], size, pos, i, count = 0;
 cout << "Enter the size of an array \n";
 cin >> size; 
cout << "Enter the value in an array \n"; 
// Take an input array for (i = 0;
 i < size; 
i++) 
{ 
cin >> a[i]; 
} 
//Input position where we delete an element cout << "Enter the position \n";
 cin >> pos; 
//Shift element from i+1 to i for(i = pos-1; 
i < size; 
i++) { arr[i] = arr[i+1]; 
} // Reduce the size of an array size--; 
// Print an array after deleting an element for(i = 0; 
i < size; 
i++) 
{ 
cout<<" "<<a[i]; 
} 
return 0; 
} 

                    Output

Enter the size of an array  - 5

Enter the value in an array

2     4     6     1      2

Enter the position    -   2

 2    4   1    2

 


 

